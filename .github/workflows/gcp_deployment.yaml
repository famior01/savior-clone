name: Build and Push Python Image to Google Cloud Platform
on:
  push:
    branches: [ Deployment ]

jobs:
  job_id: 
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: savior
      PROJECT_ID: high-function-378716
      GKE_CLUSTER: savior-cluster    
      GKE_ZONE: asia-south1   
      DEPLOYMENT_NAME: savior-deployment 
      IMAGE: savior

    permissions:
      contents: read
      id-token: write
    steps:
    - uses: actions/checkout@v3

    - id: auth
      name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1 

    - name: Build Docker Image
      working-directory: ./fs
      run: docker build -t $IMAGE_NAME:latest .

    - name: Automatic Tagging of Releases
      id: increment-git-tag
      run: |
        bash ./scripts/git_update.sh -v major

    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet       
        gcloud auth configure-docker asia-south2-docker.pkg.dev --quiet
        
    - name: Push Docker Image to Artifact Registry
      env:
        GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |-
        docker tag $IMAGE_NAME:latest asia-south2-docker.pkg.dev/$PROJECT_ID/savior-images/$IMAGE_NAME:latest
        docker tag $IMAGE_NAME:latest asia-south2-docker.pkg.dev/$PROJECT_ID/savior-images/$IMAGE_NAME:$GIT_TAG
        docker push asia-south2-docker.pkg.dev/$PROJECT_ID/savior-images/$IMAGE_NAME:latest
        docker push asia-south2-docker.pkg.dev/$PROJECT_ID/savior-images/$IMAGE_NAME:$GIT_TAG
        gcloud components install gke-gcloud-auth-plugin

    - name: connect with GKE cluster 
      run: |-
        gcloud components install kubectl
        gcloud container clusters get-credentials savior-cluster --zone asia-south2-a --project high-function-378716

    # - name: update deployment secrets
    #   run: |
    #     cat << EOF >> fs/.env
    #     ABSOLUTE_PATH=app
    #     USE_PRODUCTION=True
    #     TESTING=False
    #     DO_REDIS_URL=${{ secrets.DO_REDIS_URL }}
    #     AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     DJANGO_ALLOWED_HOSTS=${{ secrets.ALLOWED_HOST }}
    #     DOMAIN_NAME=${{ secrets.DOMAIN_NAME }}
    #     DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}
    #     DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
    #     DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}
    #     DJANGO_SUPERUSER_FULLNAME=${{ secrets.DJANGO_SUPERUSER_FULLNAME }}
    #     DJANGO_SUPERUSER_RELIGION=${{ secrets.DJANGO_SUPERUSER_RELIGION }}
    #     DJANGO_SUPERUSER_GENDER=Male
    #     DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
    #     DB_NAME=${{ secrets.DB_NAME }}
    #     DB_USERNAME=${{ secrets.DB_USERNAME }}
    #     DB_PASSWORD=${{ secrets.DB_PASSWORD }}
    #     DB_HOST=${{ secrets.DB_HOST }} 
    #     DB_PORT=${{ secrets.DB_PORT }}
    #     EMAIL_USER=${{ secrets.EMAIL_USER }} 
    #     EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
    #     EOF
    #     kubectl delete secret savior-prod-secret
    #     kubectl create secret generic savior-prod-secret --from-env-file=fs/.env
    
    # # must run some yaml scripts to allow some permissions
    # # kubectl describe deployment/savior-deployment
    - name: update Deployment Image
      run: |
        kubectl set image deployment/savior-deployment  savior-1=asia-south2-docker.pkg.dev/high-function-378716/savior-images/savior:$GIT_TAG

    - name: wait for rollout to finish
      run: |
        kubectl rollout status deployment/$DEPLOYMENT_NAME 

    - name: Migrate Database
      run: |
        export SINGLE_POD_NAME=$(kubectl get pod -l app=$DEPLOYMENT_NAME -o jsonpath="{.items[0].metadata.name}")
        kubectl exec -i $SINGLE_POD_NAME -- bash /app/migrate.sh 
        kubectl exec -i $SINGLE_POD_NAME -- bash /app/collectstatic.sh    
        kubectl exec -i $SINGLE_POD_NAME -- bash /app/superuser.sh
        
# kubectl apply -f k8s/dep/celery.yaml


# - name: Push Docker Image to Container Registry (GCR)
#   env:
#     GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
#   run: |-
#     docker tag $IMAGE_NAME:latest asia.gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
#     docker tag $IMAGE_NAME:latest asia.gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
#     docker push asia.gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
#     docker push asia.gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG


# kubectl delete secret savior-prod-secret
